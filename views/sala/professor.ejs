<% include ../partials/headerProfessor %>
<div class="container" >
    <header>
        <div class="row" >
            <div class="col s12" >
                <h3 class="flow-text" >                    
                    <form class="col s12" action="/sala/<%- exercicio._id %>?_method=put" method="post">
                        <i class="material-icons left" >playlist_play</i>Sala
                        <button class="btn waves-effect waves-light red lighten-1 right btn-small" type="submit" name="action">Finalizar
                            <i class="material-icons left">stop_screen_share</i>
                        </button>
                    </form>
                </h3>
            </div>
        </div>
    </header>
    <section>       
        <div class="row" >
            <div class="col s12" >
                <pre id="chat"></pre>
                <input type="text" id="msg" placeholder="Mensagem" >
                <button type="button" onclick="enviar();">Enviar</button>
            </div>
        </div>    
        <div class="row" >
            <div class="col s12" >
                <%-  include('resposta');  %>
            </div>
        </div>
        
      
            
        </div>
  </div>
    </section>
</div>

<script src="/socket.io/socket.io.js" ></script>
<script src="/javascripts/app/domain/Salas/Salas.js" ></script>
<script src="/javascripts/app/domain/Salas/Sala.js" ></script>
<script src="/javascripts/app/controllers/SalaController.js" ></script>
<script src="/javascripts/app/ui/views/RespostasView.js" ></script>
<script>
    const socket = io({transports: ['websocket'], upgrade: false});
    const sala = '<%- sala %>';
    const usuario = '<%- email %>';
    const quantidade_de_questao = '<%- quantidade_exercicio %>';
    socket.emit('create-room', sala);
    socket.on('send-client', (msg) => {        
        document.getElementById('chat').innerHTML += msg;
    });

    socket.on('send-answer', (aluno, questao, resposta) => {
        salaController.adicionaResposta(aluno,questao,resposta);
    });

    const enviar = () => {
        const msg = document.getElementById('msg').value;
        socket.emit('send-server', sala, msg);
    };
    
    const salaController = new SalaController();
    socket.on('notify-onlines', (aluno) => {
        salaController.adiciona(aluno, quantidade_de_questao);
    });

    socket.on('notify-offlines', (aluno) => {
        salaController.remove(aluno);
    });
</script>
<% include ../partials/footerProfessor %>